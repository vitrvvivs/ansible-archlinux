- name: Get drive model
  command: lsblk -ndo MODEL {{ format_device }}
  register: model
  changed_when: False
  ignore_errors: yes

- name: Confirm format device
  pause: prompt="Continue with formatting format {{ model.stdout or format_device }}? (Ctrl-c to cancel)"
  when: no_verify_format is not defined or no_verify_format is false

- name: Install filesystem tools
  package: name={{ item }} state=present
  with_items:
    - dosfstools
    - e2fsprogs
    - grep

- name: Unmount device
  shell: grep -oP '^{{ format_device }}[a-z0-9]+ \K[^ ]+' /proc/mounts | head -n 1 | xargs umount -R
  failed_when: False

- name: Create partitions
  shell: 
    cmd: |
      sfdisk {{ format_device }} << EOF
      label: gpt
      name="BIOS boot",        size=2M,    type=21686148-6449-6E6F-744E-656564454649
      name="EFI System",       size=512M,  type=C12A7328-F81F-11D2-BA4B-00A0C93EC93B
      name="Linux filesystem",             type=0FC63DAF-8483-4772-8E79-3D69D8477DE4
      EOF

- shell: sfdisk -l {{ format_device }} | grep '^{{ format_device }}' | grep -o '^[^ ]\+'
  register: devices

- set_fact:
    boot_device: "{{ devices.stdout_lines[1] }}"
    root_device: "{{ devices.stdout_lines[2] }}"

- name: Create EFI FAT32 partition
  shell:
    cmd: |
      mkfs.vfat -F 32 {{ boot_device }}
      fatlabel {{ boot_device }} EFI_BOOT

- name: Create Root ext4 partition
  shell: mkfs.ext4 -L archlinux_root {{ root_device }}
