- set_fact:
    pacman: "{{ chroot }} pacman --noconfirm --needed"

- name: Initialize pacman keys
  command: "{{ chroot }} pacman-key --init"
  args:
    creates: "{{ mount_dir }}/etc/pacman.d/gnupg"

- name: Update pacman keys
  command: "{{ chroot }} pacman-key --populate archlinux"

- name: Update packages
  command: "{{ pacman }} -Syu"

- name: Install extra packages from repo
  command: "{{ pacman }} -S {{ item }}"
  register: installed
  changed_when: installed.stdout is not search(item+".* is up to date")
  when: extra_packages is defined and (extra_packages | length) > 0
  with_items: "{{ extra_packages }}"

- name: Copy local package builds
  copy:
    src: "{{ item }}"
    dest: "{{ mount_dir }}/var/cache/pacman/pkg/{{ item | basename }}"
  with_items: "{{ local_packages | reject('match', '^(http|https|ftp)://') | list }}"

- name: Download local package builds
  get_url:
    url: "{{ item }}"
    dest: "{{ mount_dir }}/var/cache/pacman/pkg/{{ item | basename }}"
  with_items: "{{ local_packages | select('match', '^(http|https|ftp)://') | list }}"

- name: Install local packages
  command: "{{ pacman }} -U /var/cache/pacman/pkg/{{ item }}"
  when: local_packages is defined and (local_packages | length) > 0
  with_items: "{{ local_packages | map('basename') | list }}"
